version: "3.9"

services:
  db:
    image: postgres:14
    container_name: pg_container
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: khanakahani_app
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        # wait until Postgres is really accepting connections to the right DB
        until pg_isready -h db -U $${POSTGRES_USER} -d $${POSTGRES_DB}; do
          echo 'Waiting for Postgres (db:5432/${POSTGRES_DB})â€¦';
          sleep 2;
        done;
        # apply migrations, then start the server
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

volumes:
  postgres_data:
